#
#######################
###     基础配置     ###
#######################
server.port=80
spring.application.name=base
spring.banner.charset=UTF-8
spring.banner.location=classpath:static/banner.txt
#
#
########################
####    redis配置    ###
########################
## 集群配置
#spring.redis.cluster.nodes=192.168.136.130:6379,192.168.136.131:6379
## redis地址
spring.redis.host=192.168.136.130
## 端口
spring.redis.port=16379
## 密码
spring.redis.password=123456
## 连接池最大连接数(使用负值表示没有限制)
spring.redis.max-total=2
## Redis数据库索引(默认为0)
spring.redis.database=0
## 连接池最大空闲连接数
spring.redis.max-idle=1
## 连接池最小空闲连接数
spring.redis.min-idle=1
spring.redis.max-wait-millis=50000
spring.redis.time-between-eviction-runs-millis=10000
spring.redis.test-on-create=true
spring.redis.test-on-return=false
spring.redis.test-while-idle=true
## 连接超时时间(毫秒)
spring.redis.timeout=50000
#
#
########################
### mysql(druid)配置 ###
########################
## datasource 类型
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
## 驱动类
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
## 数据库地址
spring.datasource.druid.url=jdbc:mysql://192.168.136.130:13307/test?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
## 数据库用户名
spring.datasource.druid.username=root
## 数据库密码
spring.datasource.druid.password=123456
## 初始化连接数
spring.datasource.druid.initial-size=1
## 最小空闲数
spring.datasource.druid.min-idle=1
## 最大活跃数
spring.datasource.druid.max-active=20
## 等待超时时间(毫秒)
spring.datasource.druid.max-wait=60000
## 间隔多久才进行一次检测，检测需要关闭的空闲连接(毫秒)
spring.datasource.druid.time-between-eviction-runs-millis=2000
## 配置一个连接在池中最小生存的时间(毫秒)
#spring.datasource.druid.min-evictable-idle-time-millis=6000
## 配置一个连接在池中最大生存的时间(毫秒)
#spring.datasource.druid.max-evictable-idle-time-millis=90000
## 校验查询
spring.datasource.druid.validation-query=SELECT 'x'
## 无效测试
spring.datasource.druid.test-while-idle=true
##
spring.datasource.druid.test-on-borrow=false
## 测试返回
spring.datasource.druid.test-on-return=false
## 打开PSCache
spring.datasource.druid.pool-prepared-statements=true
## 指定每个连接上PSCache的大小
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
## 监控统计拦截的filters
spring.datasource.druid.filters=stat
## mapper location
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
mybatis.type-aliases-package=com.example.base.model
## 默认情况下会使用 PageHelper 方式进行分页，如果想要实现自己的分页逻辑，
## 可以实现 Dialect(com.github.pagehelper.Dialect) 接口，然后配置该属性为实现类的全限定名称
# pagehelper.dialect=mysql
## 方言
pagehelper.helper-dialect=mysql
## 分页合理化参数,默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql